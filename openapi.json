{
  "openapi": "3.0.2",
  "info": {
    "contact": {
      "email": "support@tyro.com",
      "name": "Tyro",
      "url": "https://tyro.com/"
    },
    "version": "1.11.0",
    "title": "Tyro Banking API",
    "description": "Tyro Banking API enables third parties to access information about our banking products and services as well as Consumers to provide consent to share their Customer, Account and Transaction information.<br /><br />\nThe API is designed and documented in OpenAPI format and in accordance with the <a href=\"https://consumerdatastandardsaustralia.github.io/standards/\">Australian Consumer Data Standards</a>.\n"
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts Related APIs"
    },
    {
      "name": "Balances",
      "description": "Account Balance Related APIs"
    },
    {
      "name": "Banking",
      "description": "Banking APIs"
    },
    {
      "name": "Common",
      "description": "Common APIs"
    },
    {
      "name": "Customer",
      "description": "Customer APIs"
    },
    {
      "name": "Discovery",
      "description": "Discovery APIs"
    },
    {
      "name": "Products",
      "description": "Products"
    },
    {
      "name": "Transactions",
      "description": "Transactions APIs"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Product APIs",
      "tags": [
        "Products"
      ]
    },
    {
      "name": "Banking APIs",
      "tags": [
        "Accounts",
        "Balances",
        "Transactions"
      ]
    },
    {
      "name": "Common APIs",
      "tags": [
        "Customer",
        "Discovery"
      ]
    }
  ],
  "servers": [
    {
      "url": "https://public.cdr.tyro.com/cds-au/v1"
    },
    {
      "url": "https://api.cdr.tyro.com/cds-au/v1"
    }
  ],
  "paths": {
    "/banking/accounts": {
      "get": {
        "description": "Obtain a list of accounts",
        "operationId": "listAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryProductCategory"
          },
          {
            "$ref": "#/components/parameters/QueryAccountOpenStatus"
          },
          {
            "$ref": "#/components/parameters/QueryAccountIsOwned"
          },
          {
            "$ref": "#/components/parameters/QueryPage"
          },
          {
            "$ref": "#/components/parameters/QueryPageSize"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAccounts"
          },
          "400": {
            "$ref": "#/components/responses/ListAccounts400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "406": {
            "$ref": "#/components/responses/ListAccounts406"
          },
          "422": {
            "$ref": "#/components/responses/ListAccounts422"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Accounts",
        "tags": [
          "Accounts",
          "Banking"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:accounts.basic:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/accounts/balances": {
      "get": {
        "description": "Obtain balances for multiple, filtered accounts",
        "operationId": "listBalancesBulk",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryProductCategory"
          },
          {
            "$ref": "#/components/parameters/QueryAccountOpenStatus"
          },
          {
            "$ref": "#/components/parameters/QueryAccountIsOwned"
          },
          {
            "$ref": "#/components/parameters/QueryPage"
          },
          {
            "$ref": "#/components/parameters/QueryPageSize"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListBalancesBulk"
          },
          "400": {
            "$ref": "#/components/responses/ListBalancesBulk400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "406": {
            "$ref": "#/components/responses/ListBalancesBulk406"
          },
          "422": {
            "$ref": "#/components/responses/ListBalancesBulk422"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Bulk Balances",
        "tags": [
          "Balances",
          "Banking"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:accounts.basic:read"
            ]
          }
        ],
        "x-version": "1"
      },
      "post": {
        "description": "Obtain balances for a specified list of accounts",
        "operationId": "listBalancesSpecificAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryPage"
          },
          {
            "$ref": "#/components/parameters/QueryPageSize"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RequestAccountIds"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListBalancesSpecificAccounts"
          },
          "400": {
            "$ref": "#/components/responses/ListBalancesSpecificAccounts400"
          },
          "406": {
            "$ref": "#/components/responses/ListBalancesSpecificAccounts406"
          },
          "422": {
            "$ref": "#/components/responses/ListBalancesSpecificAccounts422"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Balances For Specific Accounts",
        "tags": [
          "Balances",
          "Banking"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:accounts.basic:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/accounts/{accountId}": {
      "get": {
        "description": "Obtain detailed information on a single account",
        "operationId": "getAccountDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathAccountId"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccountDetail"
          },
          "400": {
            "$ref": "#/components/responses/GetAccountDetail400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "404": {
            "$ref": "#/components/responses/GetAccountDetail404"
          },
          "406": {
            "$ref": "#/components/responses/GetAccountDetail406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Account Detail",
        "tags": [
          "Accounts",
          "Banking"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:accounts.detail:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/accounts/{accountId}/balance": {
      "get": {
        "description": "Obtain the balance for a single specified account",
        "operationId": "getBalance",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathAccountId"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBalance"
          },
          "400": {
            "$ref": "#/components/responses/GetBalance400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "404": {
            "$ref": "#/components/responses/GetBalance404"
          },
          "406": {
            "$ref": "#/components/responses/GetBalance406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Account Balance",
        "tags": [
          "Balances",
          "Banking"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:accounts.basic:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/accounts/{accountId}/transactions": {
      "get": {
        "description": "Obtain transactions for a specific account.\nSome general notes that apply to all end points that retrieve transactions:\n  - Where multiple transactions are returned, transactions should be ordered according to effective date in descending order\n  - As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the “effective” date/time which will be defined as:\n    - Posted date/time if available, then\n    - Execution date/time if available, then\n    - A reasonable date/time nominated by the data holder using internal data structures\n  - For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account\n  - For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information across the subsidiary transactions as possible, is required to be shared\"",
        "operationId": "getTransactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathAccountId"
          },
          {
            "$ref": "#/components/parameters/QueryTransactionOldestTime"
          },
          {
            "$ref": "#/components/parameters/QueryTransactionNewestTime"
          },
          {
            "$ref": "#/components/parameters/QueryTransactionMinAmount"
          },
          {
            "$ref": "#/components/parameters/QueryTransactionMaxAmount"
          },
          {
            "$ref": "#/components/parameters/QueryPage"
          },
          {
            "$ref": "#/components/parameters/QueryPageSize"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetTransactions"
          },
          "400": {
            "$ref": "#/components/responses/GetTransactions400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "404": {
            "$ref": "#/components/responses/GetTransactions404"
          },
          "406": {
            "$ref": "#/components/responses/GetTransactions406"
          },
          "422": {
            "$ref": "#/components/responses/GetTransactions422"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Transactions For Account",
        "tags": [
          "Banking",
          "Transactions"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:transactions:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/accounts/{accountId}/transactions/{transactionId}": {
      "get": {
        "description": "Obtain detailed information on a transaction for a specific account",
        "operationId": "getTransactionDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathAccountId"
          },
          {
            "$ref": "#/components/parameters/PathTransactionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetTransactionDetail"
          },
          "400": {
            "$ref": "#/components/responses/GetTransactionDetail400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "404": {
            "$ref": "#/components/responses/GetTransactionDetail404"
          },
          "406": {
            "$ref": "#/components/responses/GetTransactionDetail406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Transaction Detail",
        "tags": [
          "Banking",
          "Transactions"
        ],
        "security": [
          {
            "CDRAuth": [
              "bank:transactions:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/banking/products": {
      "get": {
        "description": "Obtain a list of products that are currently openly offered to the market\n\nNote that the results returned by this end point are expected to be ordered in descending order according to `lastUpdated`\n\n### Conventions\nIn the product reference payloads there are a number of recurring conventions that are explained here, in one place.\n\n#### Arrays Of Features\n\nIn the product detail payload there are a number of arrays articulating generic features, constraints, prices, etc. The intent of these arrays is as follows:\n\n- Each element in an array has the same structure so that clients can reliably interpret the payloads\n- Each element as a type element that is an enumeration of the specific aspect of a product being described, such as types of fees.\n- Each element has a field name [additionalValue](https://consumerdatastandardsaustralia.github.io/standards/#productfeaturetypedoc). This is a generic field with contents that will vary based on the type of object being described. The contents of this field for the ADDITIONAL_CARDS feature is the number of cards allowed while the contents of this field for the MAX_LIMIT constraint would be the maximum credit limit allowed for the product.\n- An element in these arrays of the same type may appear more than once. For instance, a product may offer two separate loyalty programs that the customer can select from. A fixed term mortgage may have different rates for different term lengths.\n- An element in these arrays may contain an additionalInfo and additionalInfoUri field. The additionalInfo field is used to provide displayable text clarifying the purpose of the element in some way when the product is presented to a customer. The additionalInfoUri provides a link to externally hosted information specifically relevant to that feature of the product.\n- Depending on the type of data being represented there may be additional specific fields.\n\n#### URIs To More Information\n\nAs the complexities and nuances of a financial product can not easily be fully expressed in a data structure without a high degree of complexity it is necessary to provide additional reference information that a potential customer can access so that they are fully informed of the features and implications of the product. The payloads for product reference therefore contain numerous fields that are provided to allow the product holder to describe the product more fully using a web page hosted on their online channels.\n\nThese URIs do not need to all link to different pages. If desired, they can all link to a single hosted page and use difference HTML anchors to focus on a specific topic such as eligibility or fees.\n\n#### Linkage To Accounts\nFrom the moment that a customer applies for a product and an account is created the account and the product that spawned it will diverge.  Rates and features of the product may change and a discount may be negotiated for the account.\n\nFor this reason, while productCategory is a common field between accounts and products, there is no specific ID that can be used to link an account to a product within the regime.\n\nSimilarly, many of the fields and objects in the product payload will appear in the account detail payload but the structures and semantics are not identical as one refers to a product that can potentially be originated and one refers to an account that actual has been instantiated and created along with the associated decisions inherent in that process.\n\n#### Dates\nIt is expected that data consumers needing this data will call relatively frequently to ensure the data they have is representative of the current offering from a bank.  To minimise the volume and frequency of these calls the ability to set a lastUpdated field with the date and time of the last update to this product is included.  A call for a list of products can then be filtered to only return products that have been updated since the last time that data was obtained using the updated-since query parameter.\n\nIn addition, the concept of effective date and time has also been included.  This allows for a product to be marked for obsolescence, or introduction, from a certain time without the need for an update to show that a product has been changed.  The inclusion of these dates also removes the need to represent deleted products in the payload.  Products that are no long offered can be marked not effective for a few weeks before they are then removed from the product set as an option entirely.",
        "operationId": "listProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryProductEffective"
          },
          {
            "$ref": "#/components/parameters/QueryUpdatedSince"
          },
          {
            "$ref": "#/components/parameters/QueryProductBrand"
          },
          {
            "$ref": "#/components/parameters/QueryProductCategory"
          },
          {
            "$ref": "#/components/parameters/QueryPage"
          },
          {
            "$ref": "#/components/parameters/QueryPageSize"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListProducts"
          },
          "400": {
            "$ref": "#/components/responses/ListProducts400"
          },
          "406": {
            "$ref": "#/components/responses/ListProducts406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Products",
        "security": [],
        "tags": [
          "Banking",
          "Products"
        ],
        "x-version": "3"
      }
    },
    "/banking/products/{productId}": {
      "get": {
        "description": "Obtain detailed information on a single product offered openly to the market.\nNOTE: This version must be implemented by **February 2021**",
        "operationId": "getProductDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathProductId"
          },
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetProductDetail"
          },
          "400": {
            "$ref": "#/components/responses/GetProductDetail400"
          },
          "404": {
            "$ref": "#/components/responses/GetProductDetail404"
          },
          "406": {
            "$ref": "#/components/responses/GetProductDetail406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Product Detail",
        "security": [],
        "tags": [
          "Banking",
          "Products"
        ],
        "x-version": "3"
      }
    },
    "/common/customer": {
      "get": {
        "description": "Obtain basic information on the customer that has authorised the current session",
        "operationId": "getCustomer",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCustomer"
          },
          "400": {
            "$ref": "#/components/responses/GetCustomer400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "406": {
            "$ref": "#/components/responses/GetCustomer406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Customer",
        "tags": [
          "Common",
          "Customer"
        ],
        "security": [
          {
            "CDRAuth": [
              "common:customer.basic:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/common/customer/detail": {
      "get": {
        "description": "Obtain detailed information on the authorised customer within the current session.",
        "operationId": "getCustomerDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          },
          {
            "$ref": "#/components/parameters/HeaderXFapiInteractionId"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPIAuthDate"
          },
          {
            "$ref": "#/components/parameters/HeaderXFAPICustomerIPAddress"
          },
          {
            "$ref": "#/components/parameters/HeaderXCDSClientHeaders"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCustomerDetail"
          },
          "400": {
            "$ref": "#/components/responses/GetCustomerDetail400"
          },
          "403": {
            "$ref": "#/components/responses/Generic403"
          },
          "406": {
            "$ref": "#/components/responses/GetCustomerDetail406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Customer Detail",
        "tags": [
          "Common",
          "Customer"
        ],
        "security": [
          {
            "CDRAuth": [
              "common:customer.detail:read"
            ]
          }
        ],
        "x-version": "1"
      }
    },
    "/discovery/outages": {
      "get": {
        "description": "Obtain a list of scheduled outages for the implementation",
        "operationId": "getOutages",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetOutages"
          },
          "400": {
            "$ref": "#/components/responses/GetOutages400"
          },
          "406": {
            "$ref": "#/components/responses/GetOutages406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Outages",
        "security": [],
        "tags": [
          "Common",
          "Discovery"
        ],
        "x-version": "1"
      }
    },
    "/discovery/status": {
      "get": {
        "description": "Obtain a health check status for the implementation",
        "operationId": "getStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderXV"
          },
          {
            "$ref": "#/components/parameters/HeaderXMinV"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetStatus"
          },
          "400": {
            "$ref": "#/components/responses/GetStatus400"
          },
          "406": {
            "$ref": "#/components/responses/GetStatus406"
          },
          "500": {
            "$ref": "#/components/responses/Generic500"
          },
          "503": {
            "$ref": "#/components/responses/Generic503"
          }
        },
        "summary": "Get Status",
        "security": [],
        "tags": [
          "Common",
          "Discovery"
        ],
        "x-version": "1"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "CDRAuth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.cdr.tyro.com/tyro-auth/authorize",
            "tokenUrl": "https://secure-auth.cdr.tyro.com/tyro-auth/token",
            "scopes": {
              "bank:accounts.basic:read": "Basic Bank Account Data",
              "bank:accounts.detail:read": "Detailed Bank Account Data",
              "bank:transactions:read": "Bank Transaction Data",
              "common:customer.basic:read": "Basic Customer Data",
              "common:customer.detail:read": "Detailed Customer Data"
            }
          }
        }
      }
    },
    "schemas": {
      "EnumBankingProductCategoryV1": {
        "description": "\nThe Product Category enumeration lists the available product categories for categorising products and accounts. These are explained in the following tables:\n\n**Deposit Products**\n\n| Enum | Description\n|------|------------|\n| TRANS_AND_SAVINGS_ACCOUNTS | This grouping of products includes all accounts where cash is deposited in the account and is accessible to the customer when they choose. These are given many names on the market including Cash Accounts, Saving Accounts, Transaction Accounts, Current Accounts, Cheque Accounts, Passbook Accounts, etc... |\n| TERM_DEPOSITS              | This grouping of products includes all accounts where cash is deposited in the account for a set time period with restrictions on when funds can be withdrawn. Includes traditional Term Deposits and specialised deposits with either fixed terms or notice periods for withdrawal of funds. |\n| TRAVEL_CARDS               | This grouping of products includes prepaid cards with multi-currency capabilities.|\n| REGULATED_TRUST_ACCOUNTS   | This grouping of products includes accounts were funds are held in trust in regulated industries with complex rules embedded on how the products must operate. Industries that require this sort of product include real estate agents, solicitors and conveyancers. |\n\n**Lending Products**\n\n| Enum | Description\n|------|------------|\nRESIDENTIAL_MORTGAGES | This grouping of products includes all lending products that are available for the primary purpose of borrowing for the purpose of purchasing or renovating residential property, where a residential property will be used as security. This group will include both fixed, variable & secured overdraft types of product and may include both owner-occupied and investment purpose borrowing.\nCRED_AND_CHRG_CARDS | This grouping of products includes all lending products that are issued for the purpose of allowing a flexible line of credit accessed through use of a card. These may be called various names including Credit Cards, Charge Cards and Store Cards.\nPERS_LOANS | This grouping of products includes all lending for personal purposes that is not a residential mortgage, credit card or margin lending. These loans may be unsecured loans and term loans for purchase assets used as security such as motor vehicles. These may be called various names including Personal Loans and Car Loans.\nMARGIN_LOANS | This grouping of products includes all types of margin loans which let you borrow money to invest in traded assets including shares & commodities or in managed funds.\nLEASES | This grouping of products will include all types of leases including Financial Lease, Operating Lease, Sale and leaseback, etc...\nTRADE FINANCE | This grouping of products includes specialised lending products specifically designed to facilitate domestic & international trade. This includes the issuance of letters of credit, factoring, export credit.\nOVERDRAFTS | This grouping of products includes all types of lending which allows for the loan amount to be withdrawn, repaid, and redrawn again in any manner and any number of times, until the arrangement expires. These loans may be secured or unsecured, and generally don’t have set / minimum repayment requirements.\nBUSINESS_LOANS | This grouping of products incorporates all types of lending for business purpose that is not a trade finance facility, lease, overdraft, residential mortgage, credit card or margin lending. It includes traditional term loans, bank guarantees and commercial bills. This category would incorporate both secured and unsecured business purpose lending including all business purpose equipment finance that is not covered by a lease.\n",
        "enum": [
          "BUSINESS_LOANS",
          "CRED_AND_CHRG_CARDS",
          "LEASES",
          "MARGIN_LOANS",
          "OVERDRAFTS",
          "PERS_LOANS",
          "REGULATED_TRUST_ACCOUNTS",
          "RESIDENTIAL_MORTGAGES",
          "TERM_DEPOSITS",
          "TRADE_FINANCE",
          "TRANS_AND_SAVINGS_ACCOUNTS",
          "TRAVEL_CARDS"
        ],
        "type": "string",
        "example": "TRANS_AND_SAVINGS_ACCOUNTS"
      },
      "EnumBankingAccountOpenStatusV1": {
        "default": "OPEN",
        "description": "Open or closed status for the account. If not present then OPEN is assumed",
        "enum": [
          "CLOSED",
          "OPEN"
        ],
        "type": "string"
      },
      "BankingAccountV1": {
        "properties": {
          "accountId": {
            "description": "A unique ID of the account adhering to the standards for ID permanence",
            "type": "string",
            "format": "uuid"
          },
          "creationDate": {
            "description": "Date that the account was created (if known)",
            "type": "string",
            "format": "date"
          },
          "displayName": {
            "description": "The display name of the account as defined by the bank. This should not incorporate account numbers or PANs. If it does the values should be masked according to the rules of the MaskedAccountString common type.",
            "type": "string",
            "example": "ACME Savings Account"
          },
          "isOwned": {
            "default": true,
            "description": "Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed",
            "type": "boolean"
          },
          "maskedNumber": {
            "description": "A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number",
            "type": "string",
            "format": "MaskedAccountString",
            "example": "XXXX-XXXX-XXXX-1234"
          },
          "nickname": {
            "description": "A customer supplied nick name for the account",
            "type": "string",
            "example": "Holiday Fund"
          },
          "openStatus": {
            "$ref": "#/components/schemas/EnumBankingAccountOpenStatusV1"
          },
          "productCategory": {
            "$ref": "#/components/schemas/EnumBankingProductCategoryV1"
          },
          "productName": {
            "description": "The unique identifier of the account as defined by the data holder (akin to model number for the account)",
            "type": "string",
            "example": "ACME Savings Maximiser"
          }
        },
        "required": [
          "accountId",
          "displayName",
          "maskedNumber",
          "productCategory",
          "productName"
        ],
        "type": "object"
      },
      "LinksPaginatedV1": {
        "properties": {
          "first": {
            "description": "URI to the first page of this set. Mandatory if this response is not the first page",
            "type": "string",
            "format": "uri"
          },
          "last": {
            "description": "URI to the last page of this set. Mandatory if this response is not the last page",
            "type": "string",
            "format": "uri"
          },
          "next": {
            "description": "URI to the next page of this set. Mandatory if this response is not the last page",
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "description": "URI to the previous page of this set. Mandatory if this response is not the first page",
            "type": "string",
            "format": "uri"
          },
          "self": {
            "description": "Fully qualified link that generated the current response document",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ],
        "type": "object",
        "x-conditional": [
          "prev",
          "next",
          "first",
          "last"
        ]
      },
      "MetaPaginatedV1": {
        "properties": {
          "totalPages": {
            "description": "The total number of pages in the full set. See [pagination](https://consumerdatastandardsaustralia.github.io/standards/#pagination).",
            "type": "integer",
            "minimum": 0
          },
          "totalRecords": {
            "description": "The total number of records in the full set. See [pagination](https://consumerdatastandardsaustralia.github.io/standards/#pagination).",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "totalPages",
          "totalRecords"
        ],
        "type": "object"
      },
      "ResponseBankingAccountListV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "accounts": {
                "description": "The list of accounts returned. If the filter results in an empty set then this array may have no records",
                "items": {
                  "$ref": "#/components/schemas/BankingAccountV1"
                },
                "type": "array"
              }
            },
            "required": [
              "accounts"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksPaginatedV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaPaginatedV1"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "ErrorFieldInvalidV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/Invalid"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Field"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be the parameter name of the invalid field. The error detail MAY include further details explaining the valid format.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/Invalid",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorFieldInvalidPageSizeV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/InvalidPageSize"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Page Size"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/InvalidPageSize",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorHeaderInvalidVersionV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/InvalidVersion"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Version"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/InvalidVersion",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorGeneralExpectedV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:GeneralError/Expected"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Expected Error Encountered"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be populated with a meaningful error description, without revealing sensitive information.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri",
                "default": "urn:au-cds:error:cds-all:GeneralError/Expected"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorHeaderMissingV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Header/Missing"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Missing Required Header"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be the HTTP header name.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Header/Missing",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorHeaderInvalidV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Header/Invalid"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Header"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be the HTTP header name. The error detail MAY include further details explaining the valid format.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Header/Invalid",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ListAccounts400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorAuthorisationADRStatusNotActiveV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Authorisation/AdrStatusNotActive"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "ADR Status Is Not Active"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD contain the current status of the ADR software product.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Authorisation/AdrStatusNotActive",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorAuthorisationConsentRevokedV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Authorisation/RevokedConsent"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Consent Is Revoked"
          },
          "detail": {
            "description": "The consumer's consent is no longer authorised (for example revoked or expired) and the requested resource will not be provided.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Authorisation/RevokedConsent",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorAuthorisationInvalidConsentV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Authorisation/InvalidConsent"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Consent Is Invalid"
          },
          "detail": {
            "description": "The authorised consumer's consent is not associated to the resource requested, is insufficient to execute the resource or is in a status that prevents the resource being executed. The error detail SHOULD be a description of the status of consent without revealing sensitive information.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Authorisation/InvalidConsent",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "Generic403Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorAuthorisationADRStatusNotActiveV1"
          },
          {
            "$ref": "#/components/schemas/ErrorAuthorisationConsentRevokedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorAuthorisationInvalidConsentV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorHeaderUnsupportedVersionV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-banking:Header/UnsupportedVersion"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Unsupported Version"
          },
          "detail": {
            "description": "A request is made for a version that is lower than the minimum version or greater than maximum version the Data Holder supports for the requested endpoint. The error detail MAY include the minimum and maximum versions the Data Holder supports.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-banking:Header/UnsupportedVersion",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ListAccounts406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorFieldInvalidPageV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/InvalidPage"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Page"
          },
          "detail": {
            "description": "The page being requested it out of of range. For example, the valid pagination range is 5 pages and the client requested page=10). The error detail SHOULD be the maximum number of pages that are available.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/InvalidPage",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ListAccounts422Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorGeneralUnexpectedV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:GeneralError/Unexpected"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Unexpected Error Encountered"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be populated with a meaningful error description, without revealing sensitive information.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri",
                "default": "urn:au-cds:error:cds-all:GeneralError/Unexpected"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorServiceUnavailableV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Service/Unavailable"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Service Unavailable"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri",
                "default": "urn:au-cds:error:cds-all:Service/Unavailable"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "BankingBalancePurseV1": {
        "properties": {
          "amount": {
            "description": "The balance available for this additional currency purse",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "currency": {
            "description": "The currency for the purse",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          }
        },
        "required": [
          "amount"
        ],
        "type": "object"
      },
      "BankingBalanceV1": {
        "properties": {
          "accountId": {
            "description": "A unique ID of the account adhering to the standards for ID permanence",
            "type": "string"
          },
          "amortisedLimit": {
            "description": "Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "availableBalance": {
            "description": "Balance representing the amount of funds available for transfer. Assumed to be zero or positive",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "creditLimit": {
            "description": "Object representing the maximum amount of credit that is available for this account. Assumed to be zero if absent",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "currency": {
            "description": "The currency for the balance amounts. If absent assumed to be AUD",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "currentBalance": {
            "description": "The balance of the account at this time. Should align to the balance available via other channels such as Internet Banking. Assumed to be negative if the customer has money owing",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "purses": {
            "description": "Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards",
            "items": {
              "$ref": "#/components/schemas/BankingBalancePurseV1"
            },
            "type": "array"
          }
        },
        "required": [
          "accountId",
          "availableBalance",
          "currentBalance"
        ],
        "type": "object"
      },
      "ResponseBankingAccountsBalanceListV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "balances": {
                "description": "The list of balances returned",
                "items": {
                  "$ref": "#/components/schemas/BankingBalanceV1"
                },
                "type": "array"
              }
            },
            "required": [
              "balances"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksPaginatedV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaPaginatedV1"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "ListBalancesBulk400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ListBalancesBulk406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ListBalancesSpecificAccounts400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ListBalancesSpecificAccounts406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorBankingAuthorisationUnavailableAccountV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-banking:Authorisation/UnavailableBankingAccount"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Unavailable Banking Account"
          },
          "detail": {
            "description": "The requested bank account is temporarily unavailable. Subsequent requests for the account may be successful. Applies when the account ID is provided in the URI. The error detail is the account ID of the resource being requested.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-banking:Authorisation/UnavailableBankingAccount",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorBankingAuthorisationInvalidAccountV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-banking:Authorisation/InvalidBankingAccount"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Banking Account"
          },
          "detail": {
            "description": "The requested bank account is permanently unavailable. No subsequent request for the account will be successful. Applies when the account ID is provided in the URI. The error detail is the account ID of the resource being requested.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-banking:Authorisation/InvalidBankingAccount",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ListBalancesSpecificAccounts422Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageV1"
          },
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationUnavailableAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationInvalidAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "EnumCommonStateV1": {
        "description": "State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT",
        "enum": [
          "AAT",
          "ACT",
          "NSW",
          "NT",
          "QLD",
          "SA",
          "TAS",
          "VIC",
          "WA"
        ],
        "type": "string"
      },
      "CommonPAFAddressV1": {
        "description": "Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)",
        "properties": {
          "buildingName1": {
            "description": "Building/Property name 1",
            "type": "string"
          },
          "buildingName2": {
            "description": "Building/Property name 2",
            "type": "string"
          },
          "dpid": {
            "description": "Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier",
            "type": "string"
          },
          "flatUnitNumber": {
            "description": "Unit number (including suffix, if applicable)",
            "type": "string"
          },
          "flatUnitType": {
            "description": "Type of flat or unit for the address",
            "type": "string"
          },
          "floorLevelNumber": {
            "description": "Floor or level number (including alpha characters)",
            "type": "string"
          },
          "floorLevelType": {
            "description": "Type of floor or level for the address",
            "type": "string"
          },
          "localityName": {
            "description": "Full name of locality",
            "type": "string"
          },
          "lotNumber": {
            "description": "Allotment number for the address",
            "type": "string"
          },
          "postalDeliveryNumber": {
            "description": "Postal delivery number if the address is a postal delivery type",
            "type": "integer",
            "format": "PositiveInteger"
          },
          "postalDeliveryNumberPrefix": {
            "description": "Postal delivery number prefix related to the postal delivery number",
            "type": "string"
          },
          "postalDeliveryNumberSuffix": {
            "description": "Postal delivery number suffix related to the postal delivery number",
            "type": "string"
          },
          "postalDeliveryType": {
            "description": "Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode for the locality",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EnumCommonStateV1"
          },
          "streetName": {
            "description": "The name of the street",
            "type": "string"
          },
          "streetSuffix": {
            "description": "The street type suffix. Valid enumeration defined by Australia Post PAF code file",
            "type": "string"
          },
          "streetType": {
            "description": "The street type. Valid enumeration defined by Australia Post PAF code file",
            "type": "string"
          },
          "thoroughfareNumber1": {
            "description": "Thoroughfare number for a property (first number in a property ranged address)",
            "type": "integer",
            "minimum": 1
          },
          "thoroughfareNumber1Suffix": {
            "description": "Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated",
            "type": "string"
          },
          "thoroughfareNumber2": {
            "description": "Second thoroughfare number (only used if the property has a ranged address eg 23-25)",
            "type": "integer",
            "minimum": 1
          },
          "thoroughfareNumber2Suffix": {
            "description": "Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated",
            "type": "string"
          }
        },
        "required": [
          "localityName",
          "postcode",
          "state"
        ],
        "type": "object"
      },
      "CommonSimpleAddressV1": {
        "properties": {
          "addressLine1": {
            "description": "First line of the standard address object",
            "type": "string"
          },
          "addressLine2": {
            "description": "Second line of the standard address object",
            "type": "string"
          },
          "addressLine3": {
            "description": "Third line of the standard address object",
            "type": "string"
          },
          "city": {
            "description": "Name of the city or locality",
            "type": "string"
          },
          "country": {
            "default": "AUS",
            "description": "A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.",
            "type": "string",
            "format": "CountryString"
          },
          "mailingName": {
            "description": "Name of the individual or business formatted for inclusion in an address used for physical mail",
            "type": "string"
          },
          "postcode": {
            "description": "Mandatory for Australian addresses",
            "type": "string"
          },
          "state": {
            "description": "Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT",
            "type": "string"
          }
        },
        "required": [
          "addressLine1",
          "city",
          "state"
        ],
        "type": "object",
        "x-conditional": [
          "postcode"
        ]
      },
      "CommonPhysicalAddressV1": {
        "properties": {
          "addressUType": {
            "description": "The type of address object present",
            "enum": [
              "paf",
              "simple"
            ],
            "type": "string"
          },
          "paf": {
            "$ref": "#/components/schemas/CommonPAFAddressV1"
          },
          "simple": {
            "$ref": "#/components/schemas/CommonSimpleAddressV1"
          }
        },
        "required": [
          "addressUType"
        ],
        "type": "object",
        "x-conditional": [
          "simple",
          "paf"
        ]
      },
      "BankingCreditCardAccountV1": {
        "properties": {
          "minPaymentAmount": {
            "description": "The minimum payment amount due for the next card payment",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "paymentCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "paymentDueAmount": {
            "description": "The amount due for the next card payment",
            "type": "string",
            "format": "AmountString",
            "example": "10.00"
          },
          "paymentDueDate": {
            "description": "Date that the next payment for the card is due",
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "minPaymentAmount",
          "paymentDueAmount",
          "paymentDueDate"
        ],
        "type": "object"
      },
      "BankingProductRateConditionV1": {
        "description": "Defines a condition for the applicability of a tiered rate",
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the condition",
            "type": "string"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this condition",
            "type": "string",
            "format": "uri"
          }
        },
        "type": "object"
      },
      "EnumBankingRateApplicationMethodV1": {
        "description": "The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')",
        "enum": [
          "PER_TIER",
          "WHOLE_BALANCE"
        ],
        "type": "string"
      },
      "EnumUnitOfMeasureV1": {
        "description": "The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)",
        "enum": [
          "DAY",
          "DOLLAR",
          "MONTH",
          "PERCENT"
        ],
        "type": "string"
      },
      "BankingProductRateTierV2": {
        "description": "Defines the criteria and conditions for which a rate applies",
        "properties": {
          "applicabilityConditions": {
            "$ref": "#/components/schemas/BankingProductRateConditionV1"
          },
          "maximumValue": {
            "description": "The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 – 2 months, 2 – 3 months). If absent the tier's range has no upper bound.",
            "type": "number"
          },
          "minimumValue": {
            "description": "The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value",
            "type": "number"
          },
          "name": {
            "description": "A display name for the tier",
            "type": "string"
          },
          "rateApplicationMethod": {
            "$ref": "#/components/schemas/EnumBankingRateApplicationMethodV1"
          },
          "unitOfMeasure": {
            "$ref": "#/components/schemas/EnumUnitOfMeasureV1"
          }
        },
        "required": [
          "minimumValue",
          "name",
          "unitOfMeasure"
        ],
        "type": "object"
      },
      "BankingProductDepositRateV2": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the rate",
            "type": "string",
            "example": "A great deposit rate"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this rate",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [depositRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdepositratetypedoc) specified. Whether mandatory or not is dependent on the value of [depositRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdepositratetypedoc)",
            "type": "string",
            "example": "Type specific value, see docs"
          },
          "applicationFrequency": {
            "description": "The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString",
            "example": "P30D"
          },
          "calculationFrequency": {
            "description": "The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString",
            "example": "P1D"
          },
          "depositRateType": {
            "description": "The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning",
            "enum": [
              "FIXED",
              "BONUS",
              "BUNDLE_BONUS",
              "VARIABLE",
              "INTRODUCTORY",
              "FLOATING",
              "MARKET_LINKED"
            ],
            "type": "string",
            "example": "FIXED"
          },
          "rate": {
            "description": "The rate to be applied",
            "type": "string",
            "format": "RateString",
            "example": "0.011"
          },
          "tiers": {
            "description": "Rate tiers applicable for this rate",
            "items": {
              "$ref": "#/components/schemas/BankingProductRateTierV2"
            },
            "type": "array"
          }
        },
        "required": [
          "depositRateType",
          "rate"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue"
        ]
      },
      "EnumBankingProductFeatureTypeV1": {
        "description": "\nEach Product or Account has a set of Product Features. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nCARD_ACCESS | A card is available for the product to access funds | Text describing list of card types that this product can be linked to\nADDITIONAL_CARDS | Additional cards can be requested | The maximum number of additional cards. If no maximum then should be set to null\nUNLIMITED_TXNS | Unlimited free transactions available | NA\nFREE_TXNS | A set number of free transactions available per month | The number of free transactions\nFREE_TXNS_ALLOWANCE | A set amount of transaction fee value that is discounted per month | The amount of transaction fee discounted (in AUD)\nLOYALTY_PROGRAM | A points based loyalty program is available | Name of the loyalty program\nOFFSET | An offset account can be connected to the product | NA\nOVERDRAFT | An overdraft can be applied for | NA\nREDRAW | Redraw of repaid principal above minimum required is available | NA\nINSURANCE | Insurance is provided as an additional feature of the product | Text description of the type of insurance (e.g. Travel Insurance)\nBALANCE_TRANSFERS | Balance transfers can be made to the account (eg. for credit cards) | NA\nINTEREST_FREE | Interest free period for purchases | Interest free period. Formatted according to ISO 8601 Durations\nINTEREST_FREE_TRANSFERS | Interest free period for balance transfers | Interest free period. Formatted according to ISO 8601 Durations\nDIGITAL_WALLET | A Digital wallet can be attached to the product | The name or brand of the wallet\nDIGITAL_BANKING | Access is available to online banking features for the product | NA\nNPP_PAYID | An account of this product type can be used as the target of an NPP PayID | NA\nNPP_ENABLED | An account of this product type can be used to receive funds as a result of a BSB/Number based NPP payment | NA\nDONATE_INTEREST | Indicates that interest generated from the product can be automatically donated to a charity or community group | NA\nBILL_PAYMENT | The product can be attached to an automatic budgeting and bill payment service | Optional name of the service\nCOMPLEMENTARY_PRODUCT_DISCOUNTS | Indicates that complementary, discounted offerings (such as gift cards, or discounted travel) is available | Description of the complementary offering\nBONUS_REWARDS | Bonus loyalty rewards points are available | Number of points available\nNOTIFICATIONS | Advanced notifications are available for the product | Description of the notification capability\nOTHER | Another feature that can not be included in any of the other categories. The additionalInfo field is mandatory for this type | NA\n",
        "enum": [
          "ADDITIONAL_CARDS",
          "BALANCE_TRANSFERS",
          "BILL_PAYMENT",
          "BONUS_REWARDS",
          "CARD_ACCESS",
          "COMPLEMENTARY_PRODUCT_DISCOUNTS",
          "DIGITAL_BANKING",
          "DIGITAL_WALLET",
          "DONATE_INTEREST",
          "FREE_TXNS",
          "FREE_TXNS_ALLOWANCE",
          "INSURANCE",
          "INTEREST_FREE",
          "INTEREST_FREE_TRANSFERS",
          "LOYALTY_PROGRAM",
          "NOTIFICATIONS",
          "NPP_ENABLED",
          "NPP_PAYID",
          "OFFSET",
          "OTHER",
          "OVERDRAFT",
          "REDRAW",
          "UNLIMITED_TXNS"
        ],
        "type": "string",
        "example": "CARD_ACCESS"
      },
      "BankingProductFeatureV1": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the feature. Mandatory if the [feature type](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeaturetypedoc) is set to OTHER",
            "type": "string",
            "example": "Additional Feature Information"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this feature",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [featureType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeaturetypedoc) specified. Whether mandatory or not is dependent on the value of the [featureType.](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeaturetypedoc)",
            "example": "Type specific value, see docs",
            "type": "string"
          },
          "featureType": {
            "$ref": "#/components/schemas/EnumBankingProductFeatureTypeV1"
          }
        },
        "required": [
          "featureType"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue",
          "additionalInfo"
        ]
      },
      "EnumBankingProductDiscountTypeV1": {
        "description": "\nEach Product or Account has a set of Discount Types types. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nBALANCE | Discount on a fee for maintaining a set balance. As the discount applies to a fee the period is the same as for the fee | The minimum balance in AmountString format\nDEPOSITS | Discount for depositing a certain amount of money in a period. As the discount applies to a fee the period is the same as for the fee | The minimum deposit amount in AmountString format\nPAYMENTS | Discount for outbound payments from the account under a certain amount of money in a period. As the discount applies to a fee the period is the same as for the fee | The payment threshold amount in AmountString format\nFEE_CAP | The amount, balanceRate, transactionRate, accruedRate or feeRate fields of the discount represent the maximum amount charged in a time period | The time period for which the fee cap applies. Formatted according to ISO 8601 Durations\nELIGIBILITY_ONLY | Discount applies based on customer eligibility (eligibility array must be populated) | N/A\n",
        "enum": [
          "BALANCE",
          "DEPOSITS",
          "ELIGIBILITY_ONLY",
          "FEE_CAP",
          "PAYMENTS"
        ],
        "type": "string",
        "example": "BALANCE"
      },
      "EnumBankingProductDiscountEligibilityTypeV1": {
        "description": "\nEach Product or Account has a set of Discount Eligibility Types types. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nBUSINESS | A business or other non-person legal entity | NA\nPENSION_RECIPIENT | A recipient of a government pension may receive the discount | Optional. Should contain a description of which pensions qualify\nMIN_AGE | Only customers older than a minimum age receive the discount | The minimum age in years\nMAX_AGE | Only customers younger than a maximum age receive the discount | The maximum age in years\nMIN_INCOME | The customer must have an income greater than a specified threshold to obtain the discount | Minimum income in AmountString format\nMIN_TURNOVER | Only a business with greater than a minimum turnover is eligible | Minimum turnover in AmountString format\nSTAFF | Only a staff member of the provider may receive the discount | NA\nSTUDENT | Only students may receive the discount | Optional. Should contain a description of who qualifies as a student, e.g. do apprentices qualify?\nEMPLOYMENT_STATUS | An eligibility constraint based on employment status applies | A description of the status required\nRESIDENCY_STATUS | An eligibility constraint based on residency status applies | A description of the status required\nNATURAL_PERSON | The customer must be a natural person rather than another legal entity | NA\nINTRODUCTORY | The discount is only available during an introductory period | The period of time for the introductory discount. Formatted according to ISO 8601 Durations\nOTHER | Another eligibility criteria exists as described in the additionalInfo field (if this option is specified then the additionalInfo field is mandatory) | NA\n",
        "enum": [
          "BUSINESS",
          "EMPLOYMENT_STATUS",
          "INTRODUCTORY",
          "MAX_AGE",
          "MIN_AGE",
          "MIN_INCOME",
          "MIN_TURNOVER",
          "NATURAL_PERSON",
          "OTHER",
          "PENSION_RECIPIENT",
          "RESIDENCY_STATUS",
          "STAFF",
          "STUDENT"
        ],
        "type": "string",
        "example": "BUSINESS"
      },
      "BankingProductDiscountEligibilityV1": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType.",
            "type": "string",
            "example": "Eligibility criteria explanation"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this eligibility constraint",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [discountEligibilityType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdiscounteligibilitydoc) specified. Whether mandatory or not is dependent on the value of [discountEligibilityType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdiscounteligibilitydoc)",
            "type": "string",
            "example": "Type specific value, see docs"
          },
          "discountEligibilityType": {
            "$ref": "#/components/schemas/EnumBankingProductDiscountEligibilityTypeV1"
          }
        },
        "required": [
          "discountEligibilityType"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue"
        ]
      },
      "BankingProductDiscountV1": {
        "properties": {
          "accruedRate": {
            "description": "A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee",
            "type": "string",
            "format": "RateString",
            "example": "0.012"
          },
          "additionalInfo": {
            "description": "Display text providing more information on the discount",
            "type": "string",
            "example": "Discount Information"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this discount",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [discountType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdiscounttypedoc) specified. Whether mandatory or not is dependent on the value of [discountType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductdiscounttypedoc)",
            "type": "string",
            "example": "Type specific value, see docs"
          },
          "amount": {
            "description": "Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory.",
            "type": "string",
            "format": "AmountString",
            "example": "11.00"
          },
          "balanceRate": {
            "description": "A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee",
            "type": "string",
            "format": "RateString",
            "example": "0.0103"
          },
          "description": {
            "description": "Description of the discount",
            "type": "string"
          },
          "discountType": {
            "$ref": "#/components/schemas/EnumBankingProductDiscountTypeV1"
          },
          "eligibility": {
            "description": "Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY.",
            "items": {
              "$ref": "#/components/schemas/BankingProductDiscountEligibilityV1"
            },
            "type": "array"
          },
          "feeRate": {
            "description": "A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee",
            "type": "string",
            "format": "RateString",
            "example": "0.0124"
          },
          "transactionRate": {
            "description": "A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory",
            "type": "string",
            "format": "RateString",
            "example": "0.00234"
          }
        },
        "required": [
          "description",
          "discountType"
        ],
        "type": "object",
        "x-conditional": [
          "balanceRate",
          "transactionRate",
          "accruedRate",
          "feeRate",
          "additionalValue",
          "amount"
        ]
      },
      "EnumBankingProductFeeTypeV1": {
        "description": "\nEach Product or Account has a set of Fee Types. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nPERIODIC | A periodic fee such as a monthly account servicing fee | The period of charge. Formatted according to ISO 8601 Durations\nTRANSACTION | A fee associated with any transaction (incorporates WITHDRAWAL, DEPOSIT, PAYMENT and PURCHASE) | NA\nWITHDRAWAL | A fee associated with making a withdrawal | NA\nDEPOSIT | A fee associated with making a deposit | NA\nPAYMENT | A fee associated with making a payment | NA\nPURCHASE | A fee associated with making a purchase at a merchant | NA\nEVENT | A fee in relation to a particular event (e.g. NA ordering a new card, viewing a balance or stopping a cheque) | NA\nUPFRONT | A fee paid at the beginning of the product NA lifecycle, such as an establishment fee, loyalty program fee or application fee | NA\nEXIT | A fee for closing the product | NA\n",
        "enum": [
          "DEPOSIT",
          "EVENT",
          "EXIT",
          "PAYMENT",
          "PERIODIC",
          "PURCHASE",
          "TRANSACTION",
          "UPFRONT",
          "WITHDRAWAL"
        ],
        "type": "string",
        "example": "EXIT"
      },
      "BankingProductFeeV1": {
        "properties": {
          "accrualFrequency": {
            "description": "The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString",
            "example": "P1D"
          },
          "accruedRate": {
            "description": "A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.002"
          },
          "additionalInfo": {
            "description": "Display text providing more information on the fee",
            "type": "string",
            "example": "Additional Fee Information"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this fee",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [feeType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeetypedoc)",
            "type": "string",
            "example": "Type specific value, see docs"
          },
          "amount": {
            "description": "The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "AmountString",
            "example": "10.01"
          },
          "balanceRate": {
            "description": "A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.0023"
          },
          "currency": {
            "description": "The currency the fee will be charged in. Assumes AUD if absent",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "discounts": {
            "description": "An optional list of discounts to this fee that may be available",
            "items": {
              "$ref": "#/components/schemas/BankingProductDiscountV1"
            },
            "type": "array"
          },
          "feeType": {
            "$ref": "#/components/schemas/EnumBankingProductFeeTypeV1"
          },
          "name": {
            "description": "Name of the fee",
            "type": "string",
            "example": "Fee Name"
          },
          "transactionRate": {
            "description": "A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.0023"
          }
        },
        "required": [
          "feeType",
          "name"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue",
          "amount",
          "balanceRate",
          "transactionRate",
          "accruedRate"
        ]
      },
      "EnumBankingInterestPaymentDueV1": {
        "description": "When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered",
        "enum": [
          "IN_ADVANCE",
          "IN_ARREARS"
        ],
        "type": "string"
      },
      "EnumBankingLendingRateTypeV1": {
        "description": "\nThe type of rate (base, bonus, etc). These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nFIXED | Fixed rate for a period of time | The period of time fixed. Formatted according to ISO 8601 Durations\nVARIABLE | A variable base rate for the product | NA\nINTRODUCTORY | An introductory discount that will expire after a set period | The period of time for the introductory rate. Formatted according to ISO 8601 Durations\nDISCOUNT | A specific discount rate that may be applied. A discount rate reduces the interest payable | Description of the discount rate that is applicable\nPENALTY | A specific penalty rate that may be applied. A penalty rate increases the interest payable | Description of the penalty rate that is applicable\nFLOATING | A floating rate is relatively fixed but still adjusts under specific circumstances | Details of the float parameters\nMARKET_LINKED | A rate that is linked to a specific market, commodity or asset class | Details of the market linkage\nCASH_ADVANCE | Specific rate applied to cash advances from the account | NA\nPURCHASE | Specific rate applied to purchases from the account | NA\nBUNDLE_DISCOUNT_FIXED | A discount rate off the fixed rate obtained by originating a bundle instead of a standalone product | The name of the bundle\nBUNDLE_DISCOUNT_VARIABLE | A discount rate off the variable rate obtained by originating a bundle instead of a standalone product | The name of the bundle\n",
        "enum": [
          "BUNDLE_DISCOUNT_FIXED",
          "BUNDLE_DISCOUNT_VARIABLE",
          "CASH_ADVANCE",
          "DISCOUNT",
          "FIXED",
          "FLOATING",
          "INTRODUCTORY",
          "MARKET_LINKED",
          "PENALTY",
          "PURCHASE",
          "VARIABLE"
        ],
        "type": "string"
      },
      "EnumBankingLoanPurposeV1": {
        "description": "The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes",
        "enum": [
          "INVESTMENT",
          "OWNER_OCCUPIED"
        ],
        "type": "string"
      },
      "EnumBankingRepaymentTypeV1": {
        "description": "Options in place for repayments. If absent, the lending rate is applicable to all repayment types",
        "enum": [
          "INTEREST_ONLY",
          "PRINCIPAL_AND_INTEREST"
        ],
        "type": "string"
      },
      "BankingProductLendingRateV2": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the rate.",
            "type": "string"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this rate",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [lendingRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductlendingratetypedoc)",
            "type": "string"
          },
          "applicationFrequency": {
            "description": "The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "calculationFrequency": {
            "description": "The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "comparisonRate": {
            "description": "A comparison rate equivalent for this rate",
            "type": "string",
            "format": "RateString"
          },
          "interestPaymentDue": {
            "$ref": "#/components/schemas/EnumBankingInterestPaymentDueV1"
          },
          "lendingRateType": {
            "$ref": "#/components/schemas/EnumBankingLendingRateTypeV1"
          },
          "loanPurpose": {
            "$ref": "#/components/schemas/EnumBankingLoanPurposeV1"
          },
          "rate": {
            "description": "The rate to be applied",
            "type": "string",
            "format": "RateString"
          },
          "repaymentType": {
            "$ref": "#/components/schemas/EnumBankingRepaymentTypeV1"
          },
          "tiers": {
            "description": "Rate tiers applicable for this rate",
            "items": {
              "$ref": "#/components/schemas/BankingProductRateTierV2"
            },
            "type": "array"
          }
        },
        "required": [
          "lendingRateType",
          "rate"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue"
        ]
      },
      "BankingLoanAccountV1": {
        "properties": {
          "loanEndDate": {
            "description": "Date that the loan is due to be repaid in full",
            "type": "string",
            "format": "date"
          },
          "maxRedraw": {
            "description": "Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account",
            "type": "string",
            "format": "AmountString",
            "example": "1000.00"
          },
          "maxRedrawCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUS"
          },
          "minInstalmentAmount": {
            "description": "Minimum amount of next instalment",
            "type": "string",
            "format": "AmountString",
            "example": "122.22"
          },
          "minInstalmentCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "minRedraw": {
            "description": "Minimum redraw amount",
            "type": "string",
            "format": "AmountString",
            "example": "500.00"
          },
          "minRedrawCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "nextInstalmentDate": {
            "description": "Next date that an instalment is required",
            "type": "string",
            "format": "date"
          },
          "offsetAccountEnabled": {
            "description": "Set to true if one or more offset accounts are configured for this loan account",
            "type": "boolean",
            "example": false
          },
          "offsetAccountIds": {
            "description": "The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "originalLoanAmount": {
            "description": "Optional original loan value",
            "type": "string",
            "format": "AmountString"
          },
          "originalLoanCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString"
          },
          "originalStartDate": {
            "description": "Optional original start date for the loan",
            "type": "string",
            "format": "date"
          },
          "repaymentFrequency": {
            "description": "The expected or required repayment frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "repaymentType": {
            "$ref": "#/components/schemas/EnumBankingRepaymentTypeV1"
          }
        },
        "required": [
          "loanEndDate",
          "nextInstalmentDate",
          "repaymentFrequency"
        ],
        "type": "object"
      },
      "EnumBankingMaturityInstructionsV1": {
        "description": "Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.",
        "enum": [
          "HOLD_ON_MATURITY",
          "PAID_OUT_AT_MATURITY",
          "ROLLED_OVER"
        ],
        "type": "string"
      },
      "BankingTermDepositAccountV1": {
        "properties": {
          "lodgementDate": {
            "description": "The lodgement date of the original deposit",
            "type": "string",
            "format": "date"
          },
          "maturityAmount": {
            "description": "Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated",
            "type": "string",
            "format": "AmountString"
          },
          "maturityCurrency": {
            "description": "If absent assumes AUD",
            "type": "string",
            "format": "CurrencyString"
          },
          "maturityDate": {
            "description": "Maturity date for the term deposit",
            "type": "string",
            "format": "date"
          },
          "maturityInstructions": {
            "$ref": "#/components/schemas/EnumBankingMaturityInstructionsV1"
          }
        },
        "required": [
          "lodgementDate",
          "maturityDate",
          "maturityInstructions"
        ],
        "type": "object"
      },
      "BankingAccountDetailV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankingAccountV1"
          },
          {
            "properties": {
              "accountNumber": {
                "description": "The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces",
                "type": "string",
                "example": "01231234"
              },
              "addresses": {
                "description": "The addresses for the account to be used for correspondence",
                "items": {
                  "$ref": "#/components/schemas/CommonPhysicalAddressV1"
                },
                "type": "array"
              },
              "bsb": {
                "description": "The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces",
                "type": "string",
                "example": "999999"
              },
              "bundleName": {
                "description": "Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer",
                "type": "string",
                "example": "Great Bundle Savings"
              },
              "creditCard": {
                "$ref": "#/components/schemas/BankingCreditCardAccountV1"
              },
              "depositRate": {
                "description": "current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call",
                "type": "string",
                "format": "RateString",
                "example": "0.02"
              },
              "depositRates": {
                "description": "Fully described deposit rates for this account based on the equivalent structure in Product Reference",
                "items": {
                  "$ref": "#/components/schemas/BankingProductDepositRateV2"
                },
                "type": "array"
              },
              "features": {
                "description": "Array of features of the account based on the equivalent structure in Product Reference with the following additional field",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankingProductFeatureV1"
                    },
                    {
                      "properties": {
                        "isActivated": {
                          "default": true,
                          "description": "True if the feature is already activated and false if the feature is available for activation. Defaults to true if absent. (note this is an additional field appended to the feature object defined in the Product Reference payload)",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "fees": {
                "description": "Fees and charges applicable to the account based on the equivalent structure in Product Reference",
                "items": {
                  "$ref": "#/components/schemas/BankingProductFeeV1"
                },
                "type": "array"
              },
              "lendingRate": {
                "description": "The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call",
                "type": "string",
                "format": "RateString",
                "example": "0.02"
              },
              "lendingRates": {
                "description": "Fully described deposit rates for this account based on the equivalent structure in Product Reference",
                "items": {
                  "$ref": "#/components/schemas/BankingProductLendingRateV2"
                },
                "type": "array"
              },
              "loan": {
                "$ref": "#/components/schemas/BankingLoanAccountV1"
              },
              "specificAccountUType": {
                "description": "The type of structure to present account specific fields.",
                "enum": [
                  "creditCard",
                  "loan",
                  "termDeposit"
                ],
                "type": "string",
                "example": "loan"
              },
              "termDeposit": {
                "items": {
                  "$ref": "#/components/schemas/BankingTermDepositAccountV1"
                },
                "type": "array"
              }
            },
            "type": "object",
            "x-conditional": [
              "termDeposit",
              "creditCard",
              "loan"
            ]
          }
        ]
      },
      "LinksV1": {
        "properties": {
          "self": {
            "description": "Fully qualified link that generated the current response document",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ],
        "type": "object"
      },
      "MetaV1": {
        "type": "object"
      },
      "ResponseBankingAccountByIdV1": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankingAccountDetailV1"
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "GetAccountDetail400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorResourceNotImplementedV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Resource/NotImplemented"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Resource Not Implemented"
          },
          "detail": {
            "description": "The requested resource URL is a valid API endpoint defined by the Consumer Data Standards, but it is not implemented or not currently supported.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Resource/NotImplemented",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "GetAccountDetail404Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationUnavailableAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationInvalidAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceNotImplementedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetAccountDetail406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ResponseBankingAccountsBalanceByIdV1": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankingBalanceV1"
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "GetBalance400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetBalance404Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationUnavailableAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationInvalidAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceNotImplementedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetBalance406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "EnumBankingTransactionStatusV1": {
        "description": "Status of the transaction whether pending or posted. Note that there is currently no provision in the standards to guarantee the ability to correlate a pending transaction with an associated posted transaction",
        "enum": [
          "PENDING",
          "POSTED"
        ],
        "type": "string"
      },
      "EnumBankingTransactionTypeV1": {
        "description": "The type of the transaction",
        "enum": [
          "DIRECT_DEBIT",
          "FEE",
          "INTEREST_CHARGED",
          "INTEREST_PAID",
          "OTHER",
          "PAYMENT",
          "TRANSFER_INCOMING",
          "TRANSFER_OUTGOING"
        ],
        "type": "string"
      },
      "BankingTransactionV1": {
        "properties": {
          "accountId": {
            "description": "ID of the account for which transactions are provided",
            "type": "string"
          },
          "amount": {
            "description": "The value of the transaction. Negative values mean money was outgoing from the account",
            "type": "string",
            "format": "AmountString"
          },
          "apcaNumber": {
            "description": "6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.",
            "type": "string"
          },
          "billerCode": {
            "description": "BPAY Biller Code for the transaction (if available)",
            "type": "string"
          },
          "billerName": {
            "description": "Name of the BPAY biller for the transaction (if available)",
            "type": "string"
          },
          "crn": {
            "description": "BPAY CRN for the transaction (if available). Where the CRN contains sensitive information, it should be masked in line with how the Data Holder currently displays account identifiers in their existing online banking channels. If the contents of the CRN match the format of a Credit Card PAN they should be masked according to the rules applicable for MaskedPANString. If the contents are are otherwise sensitive, then it should be masked using the rules applicable for the MaskedAccountString common type.",
            "type": "string"
          },
          "currency": {
            "description": "The currency for the transaction amount. AUD assumed if not present",
            "type": "string",
            "format": "CurrencyString"
          },
          "description": {
            "description": "The transaction description as applied by the financial institution",
            "type": "string"
          },
          "executionDateTime": {
            "description": "The time the transaction was executed by the originating customer, if available",
            "type": "string",
            "format": "date-time"
          },
          "isDetailAvailable": {
            "description": "True if extended information is available using the transaction detail end point. False if extended data is not available",
            "type": "boolean"
          },
          "merchantCategoryCode": {
            "description": "The merchant category code (or MCC) for an outgoing payment to a merchant",
            "type": "string"
          },
          "merchantName": {
            "description": "Name of the merchant for an outgoing payment to a merchant",
            "type": "string"
          },
          "postingDateTime": {
            "description": "The time the transaction was posted. This field is Mandatory if the transaction has status POSTED.  This is the time that appears on a standard statement",
            "type": "string",
            "format": "date-time"
          },
          "reference": {
            "description": "The reference for the transaction provided by the originating institution. Empty string if no data provided",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EnumBankingTransactionStatusV1"
          },
          "transactionId": {
            "description": "A unique ID of the transaction adhering to the standards for ID permanence.  This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type. It is mandatory if `isDetailAvailable` is set to true.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EnumBankingTransactionTypeV1"
          },
          "valueDateTime": {
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "accountId",
          "amount",
          "description",
          "isDetailAvailable",
          "reference",
          "status",
          "type"
        ],
        "type": "object",
        "x-conditional": [
          "transactionId",
          "postingDateTime",
          "crn"
        ]
      },
      "ResponseBankingTransactionListV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "transactions": {
                "items": {
                  "$ref": "#/components/schemas/BankingTransactionV1"
                },
                "type": "array"
              }
            },
            "required": [
              "transactions"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksPaginatedV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaPaginatedV1"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "ErrorFieldInvalidDateTimeV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/InvalidDateTime"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Date"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be the parameter name of the invalid date field. The error detail MAY include further details explaining the expected date value.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/InvalidDateTime",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "GetTransactions400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidDateTimeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetTransactions404Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationUnavailableAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorBankingAuthorisationInvalidAccountV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceNotImplementedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetTransactions406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetTransactions422Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "BankingTransactionDetailExtendedDataX2P101PayloadV1": {
        "properties": {
          "endToEndId": {
            "description": "An end to end ID for the payment created at initiation",
            "type": "string"
          },
          "extendedDescription": {
            "description": "An extended string description. Only present if specified by the extensionUType field",
            "type": "string"
          },
          "purposeCode": {
            "description": "Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service",
            "type": "string"
          }
        },
        "required": [
          "extendedDescription"
        ]
      },
      "BankingTransactionDetailExtendedDataV1": {
        "properties": {
          "extensionUType": {
            "description": "Optional extended data provided specific to transaction originated via NPP",
            "enum": [
              "x2p101Payload"
            ],
            "type": "string"
          },
          "payee": {
            "description": "Label of the target PayID.  Mandatory for an outbound payment. The name assigned to the BSB/Account Number or PayID (by the owner of the PayID)",
            "type": "string"
          },
          "payer": {
            "description": "Label of the originating payer. Mandatory for inbound payment",
            "type": "string"
          },
          "service": {
            "description": "Identifier of the applicable overlay service. Valid values are: X2P1.01",
            "enum": [
              "X2P1.01"
            ],
            "type": "string"
          },
          "x2p101Payload": {
            "$ref": "#/components/schemas/BankingTransactionDetailExtendedDataX2P101PayloadV1"
          }
        },
        "required": [
          "service"
        ]
      },
      "BankingTransactionDetailV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankingTransactionV1"
          },
          {
            "properties": {
              "extendedData": {
                "$ref": "#/components/schemas/BankingTransactionDetailExtendedDataV1"
              }
            },
            "required": [
              "extendedData"
            ],
            "type": "object"
          }
        ]
      },
      "ResponseBankingTransactionByIdV1": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankingTransactionDetailV1"
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "BankingProductAdditionalInformationV1": {
        "description": "Object that contains links to additional information on specific topics",
        "properties": {
          "bundleUri": {
            "description": "Description of a bundle that this product can be part of",
            "type": "string",
            "format": "uri"
          },
          "eligibilityUri": {
            "description": "Eligibility rules and criteria for the product",
            "type": "string",
            "format": "uri"
          },
          "feesAndPricingUri": {
            "description": "Description of fees, pricing, discounts, exemptions and bonuses for the product",
            "type": "string",
            "format": "uri"
          },
          "overviewUri": {
            "description": "General overview of the product",
            "type": "string",
            "format": "uri"
          },
          "termsUri": {
            "description": "Terms and conditions for the product",
            "type": "string",
            "format": "uri"
          }
        }
      },
      "BankingProductCardArtV1": {
        "properties": {
          "imageUri": {
            "description": "URI reference to a PNG, JPG or GIF image with proportions defined by ISO 7810 ID-1 and width no greater than 512 pixels. The URI reference may be a link or url-encoded data URI RFC 2397.",
            "type": "string",
            "format": "uri"
          },
          "title": {
            "description": "Display label for the specific image",
            "type": "string",
            "example": "Customise your card and look snazzy"
          }
        },
        "required": [
          "imageUri"
        ]
      },
      "BankingProductV3": {
        "properties": {
          "additionalInformation": {
            "$ref": "#/components/schemas/BankingProductAdditionalInformationV1"
          },
          "applicationUri": {
            "description": "A link to an application web page where this product can be applied for.",
            "type": "string",
            "format": "uri"
          },
          "brand": {
            "description": "A label of the brand for the product. Able to be used for filtering. For data holders with single brands this value is still required",
            "type": "string"
          },
          "brandName": {
            "description": "An optional display name of the brand",
            "type": "string"
          },
          "cardArt": {
            "description": "An array of card art images",
            "items": {
              "$ref": "#/components/schemas/BankingProductCardArtV1"
            },
            "type": "array"
          },
          "description": {
            "description": "A description of the product",
            "type": "string"
          },
          "effectiveFrom": {
            "description": "The date and time from which this product is effective (ie. is available for origination).  Used to enable the articulation of products to the regime before they are available for customers to originate",
            "type": "string",
            "format": "date-time"
          },
          "effectiveTo": {
            "description": "The date and time at which this product will be retired and will no longer be offered.  Used to enable the managed deprecation of products",
            "type": "string",
            "format": "date-time"
          },
          "isTailored": {
            "description": "Indicates whether the product is specifically tailored to a circumstance.  In this case fees and prices are significantly negotiated depending on context. While all products are open to a degree of tailoring this flag indicates that tailoring is expected and thus that the provision of specific fees and rates is not applicable",
            "type": "boolean"
          },
          "lastUpdated": {
            "description": "The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered)",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "description": "The display name of the product",
            "type": "string"
          },
          "productCategory": {
            "$ref": "#/components/schemas/EnumBankingProductCategoryV1"
          },
          "productId": {
            "description": "A data holder specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines.",
            "type": "string"
          }
        },
        "required": [
          "brand",
          "description",
          "isTailored",
          "lastUpdated",
          "name",
          "productCategory",
          "productId"
        ],
        "type": "object"
      },
      "ResponseBankingProductListV3": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "products": {
                "description": "The list of products returned.  If the filter results in an empty set then this array may have no records",
                "items": {
                  "$ref": "#/components/schemas/BankingProductV3"
                },
                "type": "array"
              }
            },
            "required": [
              "products"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksPaginatedV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaPaginatedV1"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "ListProducts400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidDateTimeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ListProducts406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "BankingProductBundleV1": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the bundle",
            "type": "string",
            "example": "A great bundle with all the extras"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on the bundle criteria and benefits",
            "type": "string",
            "format": "uri"
          },
          "description": {
            "description": "Description of the bundle",
            "type": "string",
            "example": "Provides a savings account and loan"
          },
          "name": {
            "description": "Name of the bundle",
            "type": "string",
            "example": "ACME Super Bundle"
          },
          "productIds": {
            "description": "Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "type": "object"
      },
      "EnumBankingProductConstraintTypeV1": {
        "description": "\nEach Product or Account has a set of Constraints. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nMIN_BALANCE | A minimum balance is required for the product | The minimum balance in AmountString format\nMAX_BALANCE | A maximum balance is required for the product | The maximum balance in AmountString format\nOPENING_BALANCE | An opening balance is required for the product | The minimum opening balance in AmountString format\nMAX_LIMIT | A maximum limit exists (such as a maximum loan balance denoting the borrowable amount or maximum allowable credit limit) | The maximum limit in AmountString format\nMIN_LIMIT | A minimum limit exists (such as a minimum loan balance denoting the borrowable amount or minimum credit limit) | The minimum limit in AmountString format\n",
        "enum": [
          "MAX_BALANCE",
          "MAX_LIMIT",
          "MIN_BALANCE",
          "MIN_LIMIT",
          "OPENING_BALANCE"
        ],
        "type": "string",
        "example": "MIN_BALANCE"
      },
      "BankingProductConstraintV1": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information the constraint",
            "type": "string",
            "example": "Some information about the constraint"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on the constraint",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [constraintType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductconstrainttypedoc) specified.  Whether mandatory or not is dependent on the value of [constraintType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductconstrainttypedoc)",
            "type": "string",
            "example": "Type specific value, see documentation"
          },
          "constraintType": {
            "$ref": "#/components/schemas/EnumBankingProductConstraintTypeV1"
          }
        },
        "required": [
          "constraintType"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue"
        ]
      },
      "EnumBankingProductEligibilityTypeV1": {
        "description": "$ref: EnumBankingProductEligibilityTypeV1.md",
        "enum": [
          "BUSINESS",
          "EMPLOYMENT_STATUS",
          "MAX_AGE",
          "MIN_AGE",
          "MIN_INCOME",
          "MIN_TURNOVER",
          "NATURAL_PERSON",
          "OTHER",
          "PENSION_RECIPIENT",
          "RESIDENCY_STATUS",
          "STAFF",
          "STUDENT"
        ],
        "type": "string",
        "example": "MIN_TURNOVER"
      },
      "BankingProductEligibilityV1": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the [eligibility](https://consumerdatastandardsaustralia.github.io/standards/#tocSproducteligibilitytypedoc) criteria. Mandatory if the field is set to OTHER",
            "type": "string",
            "example": "Eligibility Criteria"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this eligibility criteria",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [eligibilityType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproducteligibilitytypedoc) specified. Whether mandatory or not is dependent on the value of [eligibilityType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproducteligibilitytypedoc)",
            "type": "string",
            "example": "Type dependent value, see docs"
          },
          "eligibilityType": {
            "$ref": "#/components/schemas/EnumBankingProductEligibilityTypeV1"
          }
        },
        "required": [
          "eligibilityType"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue",
          "additionalInfo"
        ]
      },
      "EnumBankingProductFeeTypeV2": {
        "description": "\nEach Product or Account has a set of Fee Types. These are explained in a table as follows:\n\n| Value | Description | Use of `additionalValue` Field\n|-------|-------------|-------------------------------|\nPERIODIC | A periodic fee such as a monthly account servicing fee | The period of charge. Formatted according to ISO 8601 Durations\nTRANSACTION | A fee associated with any transaction (incorporates WITHDRAWAL, DEPOSIT, PAYMENT and PURCHASE) | NA\nWITHDRAWAL | A fee associated with making a withdrawal | NA\nDEPOSIT | A fee associated with making a deposit | NA\nPAYMENT | A fee associated with making a payment | NA\nPURCHASE | A fee associated with making a purchase at a merchant | NA\nEVENT | A fee in relation to a particular event (e.g. ordering a new card, viewing a balance or stopping a cheque) | NA\nUPFRONT | A fee paid at the beginning of the product lifecycle, such as an establishment fee, loyalty program fee or application fee | NA\nEXIT | A fee for closing the product | NA\nVARIABLE | An at-cost fee that is relevant to a customer's circumstances where the amount or rate may not be known until negotiated with the customer | NA\n",
        "enum": [
          "DEPOSIT",
          "EVENT",
          "EXIT",
          "PAYMENT",
          "PERIODIC",
          "PURCHASE",
          "TRANSACTION",
          "UPFRONT",
          "VARIABLE",
          "WITHDRAWAL"
        ],
        "type": "string",
        "example": "EXIT"
      },
      "BankingProductFeeV2": {
        "properties": {
          "accrualFrequency": {
            "description": "The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString",
            "example": "P1D"
          },
          "accruedRate": {
            "description": "A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.002"
          },
          "additionalInfo": {
            "description": "Display text providing more information on the fee",
            "type": "string",
            "example": "Additional Fee Information"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this fee",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [feeType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductfeetypedoc)",
            "type": "string",
            "example": "Type specific value, see docs"
          },
          "amount": {
            "description": "The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "AmountString",
            "example": "10.01"
          },
          "balanceRate": {
            "description": "A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.0023"
          },
          "currency": {
            "description": "The currency the fee will be charged in. Assumes AUD if absent",
            "type": "string",
            "format": "CurrencyString",
            "example": "AUD"
          },
          "discounts": {
            "description": "An optional list of discounts to this fee that may be available",
            "items": {
              "$ref": "#/components/schemas/BankingProductDiscountV1"
            },
            "type": "array"
          },
          "feeType": {
            "$ref": "#/components/schemas/EnumBankingProductFeeTypeV2"
          },
          "name": {
            "description": "Name of the fee",
            "type": "string",
            "example": "Fee Name"
          },
          "transactionRate": {
            "description": "A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType is `VARIABLE`",
            "type": "string",
            "format": "RateString",
            "example": "0.0023"
          }
        },
        "required": [
          "feeType",
          "name"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue",
          "amount",
          "balanceRate",
          "transactionRate",
          "accruedRate"
        ]
      },
      "BankingProductRateTierV3": {
        "description": "Defines the criteria and conditions for which a rate applies",
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the rate tier.",
            "type": "string"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this rate tier",
            "type": "string",
            "format": "uri"
          },
          "applicabilityConditions": {
            "$ref": "#/components/schemas/BankingProductRateConditionV1"
          },
          "maximumValue": {
            "description": "The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 – 2 months, 2 – 3 months). If absent the tier's range has no upper bound.",
            "type": "number"
          },
          "minimumValue": {
            "description": "The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value",
            "type": "number"
          },
          "name": {
            "description": "A display name for the tier",
            "type": "string"
          },
          "rateApplicationMethod": {
            "$ref": "#/components/schemas/EnumBankingRateApplicationMethodV1"
          },
          "unitOfMeasure": {
            "$ref": "#/components/schemas/EnumUnitOfMeasureV1"
          }
        },
        "required": [
          "minimumValue",
          "name",
          "unitOfMeasure"
        ],
        "type": "object"
      },
      "BankingProductLendingRateV3": {
        "properties": {
          "additionalInfo": {
            "description": "Display text providing more information on the rate.",
            "type": "string"
          },
          "additionalInfoUri": {
            "description": "Link to a web page with more information on this rate",
            "type": "string",
            "format": "uri"
          },
          "additionalValue": {
            "description": "Generic field containing additional information relevant to the [lendingRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](https://consumerdatastandardsaustralia.github.io/standards/#tocSproductlendingratetypedoc)",
            "type": "string"
          },
          "applicationFrequency": {
            "description": "The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "calculationFrequency": {
            "description": "The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "comparisonRate": {
            "description": "A comparison rate equivalent for this rate",
            "type": "string",
            "format": "RateString"
          },
          "interestPaymentDue": {
            "$ref": "#/components/schemas/EnumBankingInterestPaymentDueV1"
          },
          "lendingRateType": {
            "$ref": "#/components/schemas/EnumBankingLendingRateTypeV1"
          },
          "loanPurpose": {
            "$ref": "#/components/schemas/EnumBankingLoanPurposeV1"
          },
          "rate": {
            "description": "The rate to be applied",
            "type": "string",
            "format": "RateString"
          },
          "repaymentType": {
            "$ref": "#/components/schemas/EnumBankingRepaymentTypeV1"
          },
          "tiers": {
            "description": "Rate tiers applicable for this rate",
            "items": {
              "$ref": "#/components/schemas/BankingProductRateTierV3"
            },
            "type": "array"
          }
        },
        "required": [
          "lendingRateType",
          "rate"
        ],
        "type": "object",
        "x-conditional": [
          "additionalValue"
        ]
      },
      "BankingProductDetailV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankingProductV3"
          },
          {
            "properties": {
              "bundles": {
                "description": "An array of bundles that this product participates in.  Each bundle is described by free form information but also by a list of product IDs of the other products that are included in the bundle.  It is assumed that the current product is included in the bundle also",
                "items": {
                  "$ref": "#/components/schemas/BankingProductBundleV1"
                },
                "type": "array"
              },
              "constraints": {
                "description": "Constraints on the application for or operation of the product such as minimum balances or limit thresholds",
                "items": {
                  "$ref": "#/components/schemas/BankingProductConstraintV1"
                },
                "type": "array"
              },
              "depositRates": {
                "description": "Interest rates available for deposits",
                "items": {
                  "$ref": "#/components/schemas/BankingProductDepositRateV2"
                },
                "type": "array"
              },
              "eligibility": {
                "description": "Eligibility criteria for the product",
                "items": {
                  "$ref": "#/components/schemas/BankingProductEligibilityV1"
                },
                "type": "array"
              },
              "features": {
                "description": "Array of features available for the product",
                "items": {
                  "$ref": "#/components/schemas/BankingProductFeatureV1"
                },
                "type": "array"
              },
              "fees": {
                "description": "Fees applicable for the product",
                "items": {
                  "$ref": "#/components/schemas/BankingProductFeeV2"
                },
                "type": "array"
              },
              "lendingRates": {
                "description": "Interest rates charged against lending balances",
                "items": {
                  "$ref": "#/components/schemas/BankingProductLendingRateV3"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "ResponseBankingProductByIdV3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankingProductDetailV3"
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "GetProductDetail400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "ErrorResourceUnavailableV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Resource/Unavailable"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Unavailable Resource"
          },
          "detail": {
            "description": "The requested resource identifier is temporarily unavailable. Subsequent requests for the resource may be successful. Applies when the resource ID is provided in the request body. The error detail is the resource ID of the resource being requested.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Resource/Unavailable",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorResourceNotFoundV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Resource/NotFound"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Resource Not Found"
          },
          "detail": {
            "description": "The requested resource URL is not an API endpoint defined by the Consumer Data Standards and it is not a URL recognised by the Data Holder or Data Recipient.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Resource/NotFound",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "ErrorResourceInvalidV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Resource/Invalid"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Invalid Resource"
          },
          "detail": {
            "description": "The requested resource identifier is permanently unavailable. No subsequent request for the resource will be successful. Applies when the resource ID is provided in the URI. The error detail is the resource ID of the resource being requested.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Resource/Invalid",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "GetProductDetail404Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorResourceUnavailableV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceNotFoundV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorResourceNotImplementedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetProductDetail406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "EnumCommonIndustryCodeVersionV1": {
        "description": "The applicable ANZSIC release version of the industry code provided. Should only be supplied if industryCode is also supplied. If industryCode is supplied but industryCodeVersion is absent, default is ANZSIC_1292.0_2006_V2.0",
        "enum": [
          "ANZSIC_1292.0_2006_V1.0",
          "ANZSIC_1292.0_2006_V2.0"
        ],
        "type": "string",
        "default": "ANZSIC_1292.0_2006_V2.0"
      },
      "EnumCommonOrganisationTypeV1": {
        "description": "Legal organisation type",
        "enum": [
          "COMPANY",
          "GOVERNMENT_ENTITY",
          "OTHER",
          "PARTNERSHIP",
          "SOLE_TRADER",
          "TRUST"
        ],
        "type": "string"
      },
      "CommonOrganisationV1": {
        "properties": {
          "abn": {
            "description": "Australian Business Number for the organisation",
            "type": "string"
          },
          "acn": {
            "description": "Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type",
            "type": "string"
          },
          "agentFirstName": {
            "description": "The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field",
            "type": "string"
          },
          "agentLastName": {
            "description": "The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field",
            "type": "string"
          },
          "agentRole": {
            "description": "The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known",
            "type": "string"
          },
          "businessName": {
            "description": "Name of the organisation",
            "type": "string"
          },
          "establishmentDate": {
            "description": "The date the organisation described was established",
            "type": "string",
            "format": "date"
          },
          "industryCode": {
            "description": "A valid ANZSIC code for the organisation. If the industry code held by the data holder is not one of the supported ANZSIC versions, then it must not be supplied.",
            "type": "string"
          },
          "industryCodeVersion": {
            "$ref": "#/components/schemas/EnumCommonIndustryCodeVersionV1"
          },
          "isACNCRegistered": {
            "description": "True if registered with the ACNC.  False if not. Absent or null if not confirmed.",
            "type": "boolean"
          },
          "lastUpdateTime": {
            "description": "The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data",
            "type": "string",
            "format": "date-time"
          },
          "legalName": {
            "description": "Legal name, if different to the business name",
            "type": "string"
          },
          "organisationType": {
            "$ref": "#/components/schemas/EnumCommonOrganisationTypeV1"
          },
          "registeredCountry": {
            "description": "Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes.  Assumed to be AUS if absent",
            "type": "string",
            "format": "CountryString"
          },
          "shortName": {
            "description": "Short name used for communication, if different to the business name",
            "type": "string"
          }
        },
        "required": [
          "agentLastName",
          "agentRole",
          "businessName",
          "organisationType"
        ],
        "type": "object"
      },
      "EnumCommonOccupationCodeVersionV1": {
        "description": "The applicable ANZSCO release version of the occupation code provided. Mandatory if an occupationCode is supplied. If occupationCode is supplied but occupationCodeVersion is absent, default is ANZSCO_1220.0_2013_V1.2",
        "enum": [
          "ANZSCO_1220.0_2006_V1.0",
          "ANZSCO_1220.0_2006_V1.1",
          "ANZSCO_1220.0_2013_V1.2",
          "ANZSCO_1220.0_2013_V1.3"
        ],
        "type": "string",
        "default": "ANZSCO_1220.0_2013_V1.2"
      },
      "CommonPersonV1": {
        "properties": {
          "firstName": {
            "description": "For people with single names this field need not be present.  The single name should be in the lastName field",
            "type": "string"
          },
          "lastName": {
            "description": "For people with single names the single name should be in this field",
            "type": "string"
          },
          "lastUpdateTime": {
            "description": "The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data",
            "type": "string",
            "format": "date-time"
          },
          "middleNames": {
            "description": "Field is mandatory but array may be empty",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "occupationCode": {
            "description": "Value is a valid ANZSCO Standard Occupation classification code. If the occupation code held by the data holder is not one of the supported ANZSCO versions, then it must not be supplied.",
            "type": "string"
          },
          "occupationCodeVersion": {
            "$ref": "#/components/schemas/EnumCommonOccupationCodeVersionV1"
          },
          "prefix": {
            "description": "Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)",
            "type": "string"
          },
          "suffix": {
            "description": "Used for a trailing suffix to the name (e.g. Jr)",
            "type": "string"
          }
        },
        "required": [
          "lastName",
          "middleNames"
        ],
        "type": "object"
      },
      "ResponseCommonCustomerV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customerUType": {
                "description": "The type of customer object that is present",
                "enum": [
                  "organisation",
                  "person"
                ],
                "type": "string"
              },
              "organisation": {
                "$ref": "#/components/schemas/CommonOrganisationV1"
              },
              "person": {
                "$ref": "#/components/schemas/CommonPersonV1"
              }
            },
            "required": [
              "customerUType"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "x-conditional": [
          "person",
          "organisation"
        ]
      },
      "GetCustomer400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetCustomer406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "CommonPhysicalAddressWithPurposeV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonPhysicalAddressV1"
          },
          {
            "properties": {
              "purpose": {
                "description": "Enumeration of values indicating the purpose of the physical address",
                "enum": [
                  "MAIL",
                  "OTHER",
                  "PHYSICAL",
                  "REGISTERED",
                  "WORK"
                ],
                "type": "string"
              }
            },
            "required": [
              "purpose"
            ],
            "type": "object"
          }
        ]
      },
      "CommonOrganisationDetailV1": {
        "description": "Mandatory if `customerUType` is `organisation`",
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonOrganisationV1"
          },
          {
            "properties": {
              "physicalAddresses": {
                "description": "Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail",
                "items": {
                  "$ref": "#/components/schemas/CommonPhysicalAddressWithPurposeV1"
                },
                "type": "array"
              }
            },
            "required": [
              "physicalAddresses"
            ],
            "type": "object"
          }
        ]
      },
      "EnumCommonEmailAddressPurposeV1": {
        "description": "The purpose for the email, as specified by the customer (Enumeration)",
        "enum": [
          "HOME",
          "OTHER",
          "UNSPECIFIED",
          "WORK"
        ],
        "type": "string"
      },
      "CommonEmailAddressV1": {
        "properties": {
          "address": {
            "description": "A correctly formatted email address, as defined by the addr_spec format in [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt)",
            "type": "string",
            "format": "email"
          },
          "isPreferred": {
            "description": "May be true for one and only one email record in the collection. Denotes the default email address",
            "type": "boolean"
          },
          "purpose": {
            "$ref": "#/components/schemas/EnumCommonEmailAddressPurposeV1"
          }
        },
        "required": [
          "address",
          "purpose"
        ],
        "type": "object"
      },
      "EnumCommonPhoneNumberPurposeV1": {
        "description": "The purpose of the number as specified by the customer",
        "enum": [
          "HOME",
          "INTERNATIONAL",
          "MOBILE",
          "OTHER",
          "UNSPECIFIED",
          "WORK"
        ],
        "type": "string"
      },
      "CommonPhoneNumberV1": {
        "properties": {
          "areaCode": {
            "description": "Required for non Mobile Phones, if field is present and refers to Australian code - the leading 0 should be omitted.",
            "type": "string"
          },
          "countryCode": {
            "description": "If absent, assumed to be Australia (+61). The + should be included",
            "type": "string"
          },
          "extension": {
            "description": "An extension number (if applicable)",
            "type": "string"
          },
          "fullNumber": {
            "description": "Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of [RFC 3966](https://www.ietf.org/rfc/rfc3966.txt)",
            "type": "string",
            "format": "PhoneNumberString"
          },
          "isPreferred": {
            "description": "May be true for one and only one entry to indicate the preferred phone number. Assumed to be 'false' if not present",
            "type": "boolean"
          },
          "number": {
            "description": "The actual phone number, with leading zeros as appropriate",
            "type": "string"
          },
          "purpose": {
            "$ref": "#/components/schemas/EnumCommonPhoneNumberPurposeV1"
          }
        },
        "required": [
          "fullNumber",
          "number",
          "purpose"
        ],
        "type": "object",
        "x-conditional": [
          "areaCode"
        ]
      },
      "CommonPersonDetailV1": {
        "description": "Mandatory if `customerUType` is `person`",
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonPersonV1"
          },
          {
            "properties": {
              "emailAddresses": {
                "description": "May be empty",
                "items": {
                  "$ref": "#/components/schemas/CommonEmailAddressV1"
                },
                "type": "array"
              },
              "phoneNumbers": {
                "description": "Array is mandatory but may be empty if no phone numbers are held",
                "items": {
                  "$ref": "#/components/schemas/CommonPhoneNumberV1"
                },
                "type": "array"
              },
              "physicalAddresses": {
                "description": "Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail",
                "items": {
                  "$ref": "#/components/schemas/CommonPhysicalAddressWithPurposeV1"
                },
                "type": "array"
              }
            },
            "required": [
              "emailAddresses",
              "phoneNumbers",
              "physicalAddresses"
            ],
            "type": "object"
          }
        ]
      },
      "ResponseCommonCustomerDetailV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customerUType": {
                "description": "The type of customer object that is present",
                "enum": [
                  "organisation",
                  "person"
                ],
                "type": "string"
              },
              "organisation": {
                "$ref": "#/components/schemas/CommonOrganisationDetailV1"
              },
              "person": {
                "$ref": "#/components/schemas/CommonPersonDetailV1"
              }
            },
            "required": [
              "customerUType"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "x-conditional": [
          "person",
          "organisation"
        ]
      },
      "GetCustomerDetail400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetCustomerDetail406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "DiscoveryOutageV1": {
        "properties": {
          "duration": {
            "description": "Planned duration of the outage. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
            "type": "string",
            "format": "DurationString"
          },
          "explanation": {
            "description": "Provides an explanation of the current outage that can be displayed to an end customer",
            "type": "string"
          },
          "isPartial": {
            "description": "Flag that indicates, if present and set to true, that the outage is only partial meaning that only a subset of normally available end points will be affected by the outage",
            "type": "boolean"
          },
          "outageTime": {
            "description": "Date and time that the outage is scheduled to begin",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "duration",
          "explanation",
          "outageTime"
        ],
        "type": "object"
      },
      "ResponseDiscoveryOutagesListV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "outages": {
                "description": "List of scheduled outages. Property is mandatory but may contain and empty list if no outages are scheduled",
                "items": {
                  "$ref": "#/components/schemas/DiscoveryOutageV1"
                },
                "type": "array"
              }
            },
            "required": [
              "outages"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "ErrorFieldMissingV1": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Holds an end point specific error code. This MAY be a standard CDR error code or an application-specific error code.",
            "type": "string",
            "format": "uri",
            "default": "urn:au-cds:error:cds-all:Field/Missing"
          },
          "title": {
            "description": "Holds a human readable label of the error that is constant per code",
            "type": "string",
            "default": "Missing Required Field"
          },
          "detail": {
            "description": "Holds a human readable description of this specific error. The error detail SHOULD be the parameter name of the missing field.",
            "type": "string"
          },
          "meta": {
            "description": "Holds additional end point specific data relevant to the error",
            "properties": {
              "urn": {
                "description": "Holds a standard CDR error code",
                "type": "string",
                "format": "uri"
              }
            },
            "default": "urn:au-cds:error:cds-all:Field/Missing",
            "type": "object"
          }
        },
        "required": [
          "code",
          "title",
          "detail"
        ]
      },
      "GetOutages400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorFieldInvalidPageSizeV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetOutages406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "EnumCommonDiscoveryStatusV1": {
        "description": "Enumeration with values. OK (implementation is fully functional). PARTIAL_FAILURE (one or more end points are unexpectedly unavailable). UNAVAILABLE (the full implementation is unexpectedly unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect)",
        "enum": [
          "OK",
          "PARTIAL_FAILURE",
          "SCHEDULED_OUTAGE",
          "UNAVAILABLE"
        ],
        "type": "string"
      },
      "ResponseCommonDiscoveryStatusV1": {
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "detectionTime": {
                "description": "The date and time that the current outage was detected. Should only be present if the status property is PARTIAL_FAILURE or UNAVAILABLE",
                "type": "string",
                "format": "date-time"
              },
              "expectedResolutionTime": {
                "description": "The date and time that full service is expected to resume (if known). Should not be present if the status property has a value of OK.",
                "type": "string",
                "format": "date-time"
              },
              "explanation": {
                "description": "Provides an explanation of the current outage that can be displayed to an end customer. Mandatory if the status property is any value other than OK",
                "type": "string"
              },
              "status": {
                "$ref": "#/components/schemas/EnumCommonDiscoveryStatusV1"
              },
              "updateTime": {
                "description": "The date and time that this status was last updated by the Data Holder.",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "status",
              "updateTime"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/LinksV1"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaV1"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "GetStatus400Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderMissingV1"
          },
          {
            "$ref": "#/components/schemas/ErrorHeaderInvalidV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "GetStatus406Item": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorHeaderUnsupportedVersionV1"
          },
          {
            "$ref": "#/components/schemas/ErrorGeneralExpectedV1"
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      }
    },
    "parameters": {
      "QueryProductCategory": {
        "name": "product-category",
        "in": "query",
        "description": "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/EnumBankingProductCategoryV1"
        }
      },
      "QueryAccountOpenStatus": {
        "description": "Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed",
        "in": "query",
        "name": "open-status",
        "required": false,
        "schema": {
          "default": "ALL",
          "enum": [
            "ALL",
            "CLOSED",
            "OPEN"
          ],
          "type": "string"
        }
      },
      "QueryAccountIsOwned": {
        "description": "Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts",
        "in": "query",
        "name": "is-owned",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "x-cds-type": "Boolean"
      },
      "QueryPage": {
        "description": "Page of results to request (standard pagination)",
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "default": 1,
          "type": "integer"
        },
        "x-cds-type": "PositiveInteger"
      },
      "QueryPageSize": {
        "description": "Page size to request. Default is 25 (standard pagination)",
        "in": "query",
        "name": "page-size",
        "required": false,
        "schema": {
          "default": 25,
          "type": "integer"
        },
        "x-cds-type": "PositiveInteger"
      },
      "HeaderXV": {
        "description": "Version of the API end point requested by the client. Must be set to a positive integer.",
        "in": "header",
        "name": "x-v",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "HeaderXMinV": {
        "description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
        "in": "header",
        "name": "x-min-v",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "HeaderXFapiInteractionId": {
        "description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.",
        "in": "header",
        "name": "x-fapi-interaction-id",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "6ba7b814-9dad-11d1-80b4-00c04fd430c8"
        }
      },
      "HeaderXFAPIAuthDate": {
        "description": "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.",
        "in": "header",
        "name": "x-fapi-auth-date",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Thu, 16 Jan 2020 16:50:15 GMT"
        }
      },
      "HeaderXFAPICustomerIPAddress": {
        "description": "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.",
        "in": "header",
        "name": "x-fapi-customer-ip-address",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
        }
      },
      "HeaderXCDSClientHeaders": {
        "description": "The customer's original standard http headers [Base64](https://consumerdatastandardsaustralia.github.io/standards/#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.",
        "in": "header",
        "name": "x-cds-client-headers",
        "required": false,
        "schema": {
          "type": "string",
          "example": "TW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzkuMC4zOTQ1Ljg4IFNhZmFyaS81MzcuMzY="
        },
        "x-cds-type": "Base64"
      },
      "PathAccountId": {
        "description": "ID of the account to get scheduled payments for. Must have previously been returned by one of the account list end points. The account specified is the source account for the payment",
        "in": "path",
        "name": "accountId",
        "required": true,
        "schema": {
          "type": "string",
          "x-cds-type": "ASCIIString"
        }
      },
      "QueryTransactionOldestTime": {
        "description": "Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to newest-time minus 90 days.  Format is aligned to DateTimeString common type",
        "in": "query",
        "name": "oldest-time",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "QueryTransactionNewestTime": {
        "description": "Constrain the transaction history request to transactions with effective time at or before this date/time.  If absent defaults to today.  Format is aligned to DateTimeString common type",
        "in": "query",
        "name": "newest-time",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "QueryTransactionMinAmount": {
        "description": "Filter transactions to only transactions with amounts higher or equal to than this amount",
        "in": "query",
        "name": "min-amount",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-cds-type": "AmountString"
      },
      "QueryTransactionMaxAmount": {
        "description": "Filter transactions to only transactions with amounts less than or equal to than this amount",
        "in": "query",
        "name": "max-amount",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-cds-type": "AmountString"
      },
      "PathTransactionId": {
        "description": "ID of the transaction obtained from a previous call to one of the other transaction end points",
        "in": "path",
        "name": "transactionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-cds-type": "ASCIIString"
      },
      "QueryProductEffective": {
        "description": "Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'",
        "in": "query",
        "name": "effective",
        "required": false,
        "schema": {
          "default": "CURRENT",
          "enum": [
            "ALL",
            "CURRENT",
            "FUTURE"
          ],
          "type": "string"
        }
      },
      "QueryUpdatedSince": {
        "description": "Only include products that have been updated after the specified date and time. If absent defaults to include all products",
        "in": "query",
        "name": "updated-since",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "QueryProductBrand": {
        "description": "Filter results based on a specific brand",
        "in": "query",
        "name": "brand",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "PathProductId": {
        "description": "ID of the specific product requested",
        "in": "path",
        "name": "productId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-cds-type": "ASCIIString"
      }
    },
    "headers": {
      "XFAPIInteractionId": {
        "description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs.",
        "schema": {
          "type": "string"
        }
      },
      "XV": {
        "description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with.",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "ListAccounts": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingAccountListV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListAccounts400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListAccounts400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "Generic403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/Generic403Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        }
      },
      "ListAccounts406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListAccounts406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListAccounts422": {
        "description": "Unprocessable Entity Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListAccounts422Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "Generic500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorGeneralUnexpectedV1"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "Generic503": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorServiceUnavailableV1"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesBulk": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingAccountsBalanceListV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesBulk400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListBalancesBulk400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesBulk406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListBalancesBulk406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesBulk422": {
        "description": "Unprocessable Entity Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListAccounts422Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesSpecificAccounts": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingAccountsBalanceListV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesSpecificAccounts400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListBalancesSpecificAccounts400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesSpecificAccounts406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListBalancesSpecificAccounts406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListBalancesSpecificAccounts422": {
        "description": "Unprocessable Entity Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListBalancesSpecificAccounts422Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetAccountDetail": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingAccountByIdV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetAccountDetail400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetAccountDetail400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetAccountDetail404": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetAccountDetail404Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetAccountDetail406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetAccountDetail406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetBalance": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingAccountsBalanceByIdV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetBalance400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetBalance400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetBalance404": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetBalance404Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetBalance406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetBalance406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactions": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingTransactionListV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactions400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactions404": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions404Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactions406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactions422": {
        "description": "Unprocessable Entity Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions422Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactionDetail": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingTransactionByIdV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactionDetail400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactionDetail404": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions404Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetTransactionDetail406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetTransactions406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListProducts": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingProductListV3"
                }
              ]
            }
          }
        },
        "headers": {
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListProducts400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListProducts400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "ListProducts406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/ListProducts406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetProductDetail": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseBankingProductByIdV3"
                }
              ]
            }
          }
        },
        "headers": {
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetProductDetail400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetProductDetail400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetProductDetail404": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetProductDetail404Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetProductDetail406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetProductDetail406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomer": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseCommonCustomerV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomer400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetCustomer400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomer406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetCustomer406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomerDetail": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseCommonCustomerDetailV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomerDetail400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetCustomerDetail400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetCustomerDetail406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetCustomerDetail406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetOutages": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseDiscoveryOutagesListV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetOutages400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetOutages400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetOutages406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetOutages406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetStatus": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ResponseCommonDiscoveryStatusV1"
                }
              ]
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetStatus400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetStatus400Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      },
      "GetStatus406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "$ref": "#/components/schemas/GetStatus406Item"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "headers": {
          "x-fapi-interaction-id": {
            "$ref": "#/components/headers/XFAPIInteractionId"
          },
          "x-v": {
            "$ref": "#/components/headers/XV"
          }
        }
      }
    },
    "requestBodies": {
      "RequestAccountIds": {
        "description": "List of Account Identifiers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "accountIds": {
                  "items": {
                    "description": "Array of specific accountIds to obtain authorisations for",
                    "type": "string",
                    "x-cds-type": "ASCIIString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "accountIds"
              ]
            }
          }
        },
        "required": true
      }
    }
  }
}